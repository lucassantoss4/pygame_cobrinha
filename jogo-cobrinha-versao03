# pygame_cobrinha
#Repositório do game

import pygame
from pygame.locals import *
from sys import exit 
from random import randint # sorteia valores em um determinado intervalo 


# inicia o jogo
pygame.init()

#Descrição da tela
largura = 640
altura = 480

# Variaveis display 
x = largura/2 # posicao do retangulo
y = altura/2 

# texto: (parametro(arial), tamanho, negrito(True ou False), italico(True ou False))
fonte =pygame.font.SysFont('arial', 40, bold=True, italic=True)
# pygame.font.get_fonts() comando para ver as fontes disponiveis

# Intervalo de tempo do retangulo azul com a função randint
x_azul = randint (40, 600) # posição em X
y_azul = randint (50, 430) # posição Y

# contador de pontos
pontos = 0

tela_game = pygame.display.set_mode((largura, altura))

# nome do jogo
pygame.display.set_caption('Jogo da cobrinha')


# taxa de frems do retangulo 
relogio = pygame.time.Clock()

# lupi do jogo
while True:
    relogio.tick(18) # quanto maior o numero de frems mais rapido o retangulo vaiu rodar
    tela_game.fill((0,0,0)) #preenche com a cor da tela
    mensagem = f'PONTOS: {pontos}' # o que vai aparecer  na tela game
    texto_formatado = fonte.render(mensagem, True, (255,255,255))
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame .quit()
            exit ()
        # condicao 
        # if event.type == KEYDOWN: # se jogador apertar qualquer tecla
        #     if event.key == K_a:
        #         x -= 20
        #     if event.key == K_d:
        #         x += 20
        #     if event.key == K_w:
        #         y -= 20
        #     if event.key == K_s:
        #         y += 20
    if pygame.key.get_pressed()[K_a]:
        x -= 20
    if pygame.key.get_pressed()[K_d]:
        x+= 20
    if pygame.key.get_pressed()[K_w]:
        y -= 20
    if pygame.key.get_pressed()[K_s]:
        y += 20

    # desenha retangulo: ((parametro),(cor do retangulo),{(posicao(x,y)),(combrimento(largura em pix))(altura em pix)}
    # pygame.draw.rect(tela_game,(0,255,0),(200,300,40,50)) # (200,300,40,50) é {(posicao(x,y)),(combrimento(largura em pix))(altura em pix)}



    pygame.display.update() # a cada iteração do jogador , atualiza a tela 

    ret_vermelho = pygame.draw.rect(tela_game, (255,0,0), (x, y , 40 , 50)) # (200,300,40,50) é {(posicao(x,y)),(combrimento(largura em pix))(altura em pix)}
    ret_azul= pygame.draw.rect(tela_game, (0,0,255), (x_azul, y_azul ,40,50)) # quadrado azul

# caso o retangulo vermelho (ret_vermelho) encoste no azul COLISÃO
    if ret_vermelho.colliderect(ret_azul):
        x_azul = randint (40, 600)
        y_azul = randint (50, 430)
        pontos +=10

    # apresenta o texto na tela (parametro,(posicao(x,y))
    tela_game.blit(texto_formatado,(000,0x0))
    #print ('colidiu') subistituido por X ,Y

    pygame.display.update()


window.fill((0, 0, 0))  # Preenche com a cor branca
window.blit(background, (0, 0))
window.blit(meteor_img_small, (meteor_x, meteor_y))
pygame.display.update()  # Mostra o novo frame para o jogador
